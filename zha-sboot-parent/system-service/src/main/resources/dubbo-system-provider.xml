<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:zookeeper.properties</value>
			</list>
		</property>
	</bean>

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="${zoo_application}"  />

	<!-- 使用 zookeeper -->
	<dubbo:registry protocol="zookeeper" address="${zoo_address}" />
	<!-- 用dubbo协议在30010端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="${zoo_port}" dispatcher="all" threadpool="fixed" threads="${zoo_threads}" />

	<!---->
	<context:component-scan base-package="com.zw" name-generator="com.zw.core.custom.MyAnnotationBeanNameGenerator"/>
	<!-- 声明需要暴露的服务接口 -->
	<dubbo:service interface="com.zw.system.service.IUserService" ref="com.zw.system.service.impl.UserServiceImpl" />
	<!--<dubbo:service interface="com.zw.xt.service.IUserService" ref="com.zw.xt.service.impl.UserServiceImpl" />-->

	<!-- 	在配置文件中加上<dubbo:annotation>，是dubbo的扫描标签，它除了会扫描带有
   	'@Component'、'@Service'、'@Controller'注解的类，把它们注册成SpringBean之外，
   	它还会扫描带有”@Service” (dubbo的service标签)的接口实现类发布服务（必须有实现接口，不然或抛出BeanCreationException异常）
   	。同时在要发布服务的接口实现类上加上”@Service” (dubbo的service标签)。启动服务器，服务就发布成功了。 -->
	<dubbo:annotation package="com.zw.*.service.impl"></dubbo:annotation>


</beans>